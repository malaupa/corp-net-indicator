// Code generated by running "go generate" in golang.org/x/text. DO NOT EDIT.

package i18n

import (
	"golang.org/x/text/language"
	"golang.org/x/text/message"
	"golang.org/x/text/message/catalog"
)

type dictionary struct {
	index []uint32
	data  string
}

func (d *dictionary) Lookup(key string) (data string, ok bool) {
	p, ok := messageKeyToIndex[key]
	if !ok {
		return "", false
	}
	start, end := d.index[p], d.index[p+1]
	if start == end {
		return "", false
	}
	return d.data[start:end], true
}

func init() {
	dict := map[string]catalog.Dictionary{
		"de": &dictionary{index: deIndex, data: deData},
		"en": &dictionary{index: enIndex, data: enData},
	}
	fallback := language.MustParse("en")
	cat, err := catalog.NewFromMap(dict, catalog.Fallback(fallback))
	if err != nil {
		panic(err)
	}
	message.DefaultCatalog = cat
}

var messageKeyToIndex = map[string]int{
	"Connect":        4,
	"Connect VPN":    2,
	"Connect to VPN": 3,
	"Error!":         6,
	"Password":       5,
	"Show Status":    1,
	"Status":         0,
}

var deIndex = []uint32{ // 8 elements
	0x00000000, 0x00000007, 0x00000017, 0x00000025,
	0x0000003b, 0x00000045, 0x0000004e, 0x00000056,
} // Size: 56 bytes

const deData string = "" + // Size: 86 bytes
	"\x02Status\x02Status anzeigen\x02VPN verbinden\x02Mit dem VPN verbinden" +
	"\x02Verbinden\x02Passwort\x02Fehler!"

var enIndex = []uint32{ // 8 elements
	0x00000000, 0x00000007, 0x00000013, 0x0000001f,
	0x0000002e, 0x00000036, 0x0000003f, 0x00000046,
} // Size: 56 bytes

const enData string = "" + // Size: 70 bytes
	"\x02Status\x02Show Status\x02Connect VPN\x02Connect to VPN\x02Connect" +
	"\x02Password\x02Error!"

	// Total table size 268 bytes (0KiB); checksum: 72EAEA3C
