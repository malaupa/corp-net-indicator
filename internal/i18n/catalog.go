// Code generated by running "go generate" in golang.org/x/text. DO NOT EDIT.

package i18n

import (
	"golang.org/x/text/language"
	"golang.org/x/text/message"
	"golang.org/x/text/message/catalog"
)

type dictionary struct {
	index []uint32
	data  string
}

func (d *dictionary) Lookup(key string) (data string, ok bool) {
	p, ok := messageKeyToIndex[key]
	if !ok {
		return "", false
	}
	start, end := d.index[p], d.index[p+1]
	if start == end {
		return "", false
	}
	return d.data[start:end], true
}

func init() {
	dict := map[string]catalog.Dictionary{
		"de": &dictionary{index: deIndex, data: deData},
		"en": &dictionary{index: enIndex, data: enData},
	}
	fallback := language.MustParse("en")
	cat, err := catalog.NewFromMap(dict, catalog.Fallback(fallback))
	if err != nil {
		panic(err)
	}
	message.DefaultCatalog = cat
}

var messageKeyToIndex = map[string]int{
	"Cancel":                 14,
	"Certificate expires":    21,
	"Connect":                13,
	"Connect VPN":            2,
	"Connect to VPN":         3,
	"Connected":              17,
	"Connected at":           18,
	"Device":                 20,
	"Disconnect VPN":         4,
	"Error: [%v]":            5,
	"IP":                     19,
	"Identity Details":       7,
	"Kerberos ticket issued": 10,
	"Last Refresh":           9,
	"Logged in":              8,
	"Password":               11,
	"ReLogin":                6,
	"Server":                 12,
	"Show Status":            1,
	"Status":                 0,
	"Trusted Network":        16,
	"VPN Details":            15,
}

var deIndex = []uint32{ // 23 elements
	0x00000000, 0x00000007, 0x00000017, 0x00000025,
	0x0000003b, 0x00000047, 0x00000057, 0x00000064,
	0x00000075, 0x00000080, 0x00000091, 0x000000aa,
	0x000000b3, 0x000000ba, 0x000000c4, 0x000000ce,
	0x000000da, 0x000000ea, 0x000000f4, 0x00000101,
	0x00000104, 0x0000010b, 0x00000124,
} // Size: 116 bytes

const deData string = "" + // Size: 292 bytes
	"\x02Status\x02Status anzeigen\x02VPN verbinden\x02Mit dem VPN verbinden" +
	"\x02VPN trennen\x02Fehler: [%[1]v]\x02Neu anmelden\x02Identity Details" +
	"\x02Angemeldet\x02Letzte Anmeldung\x02Kerberos Ticket erhalten\x02Passwo" +
	"rt\x02Server\x02Verbinden\x02Abbrechen\x02VPN Details\x02Trusted Network" +
	"\x02Verbunden\x02Verbunden am\x02IP\x02Gerät\x02Zertifikat läuft aus am"

var enIndex = []uint32{ // 23 elements
	0x00000000, 0x00000007, 0x00000013, 0x0000001f,
	0x0000002e, 0x0000003d, 0x0000004c, 0x00000054,
	0x00000065, 0x0000006f, 0x0000007c, 0x00000093,
	0x0000009c, 0x000000a3, 0x000000ab, 0x000000b2,
	0x000000be, 0x000000ce, 0x000000d8, 0x000000e5,
	0x000000e8, 0x000000ef, 0x00000103,
} // Size: 116 bytes

const enData string = "" + // Size: 259 bytes
	"\x02Status\x02Show Status\x02Connect VPN\x02Connect to VPN\x02Disconnect" +
	" VPN\x02Error: [%[1]v]\x02ReLogin\x02Identity Details\x02Logged in\x02La" +
	"st Refresh\x02Kerberos ticket issued\x02Password\x02Server\x02Connect" +
	"\x02Cancel\x02VPN Details\x02Trusted Network\x02Connected\x02Connected a" +
	"t\x02IP\x02Device\x02Certificate expires"

	// Total table size 783 bytes (0KiB); checksum: 18EBB379
