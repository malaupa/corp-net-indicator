name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: stable

      - name: Lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          # https://github.com/golangci/golangci-lint-action/issues/135
          skip-pkg-cache: true
  test:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: stable

      - name: Install xvfb, upx and gtk
        run: sudo apt-get update && sudo apt-get install upx-ucl libgtk-4-dev  libglib2.0-dev xvfb -y

      - name: Run tests
        run: |+
          xvfb-run -a go test -v -timeout 60m -coverprofile coverage.out ./... | tee test.out
          go tool cover -html coverage.out -o coverage.html
          cat test.out | awk '
            BEGIN {
              printf("## Test Result\n\n")
              details = "<details>\n<summary>Test Details</summary>\n\n"
            }
            $1 ~ /===/ { 
              count++
              error = ""
            }
            $1 ~ /---/ { 
              if ( $2 ~ /FAIL:/ ) { 
                failed++ 
                details = sprintf("%s:red_circle: %s %s\n", details, $3, $4)
                details = sprintf("%s<details>\n<summary>Log</summary>\n\n```%s```\n\n</details>\n\n", details, error)
              }
              if ( $2 ~ /SKIP:/) {
                skipped++
                details = sprintf("%s:white_circle: %s\n", details, $3)
              }
              if ( $2 ~ /PASS:/) {
                details = sprintf("%s:green_circle: %s %s\n", details, $3, $4)
              }
            } 
            { error = error$0"\n" }
            END { 
              if (failed > 0) {
                printf(":broken_heart: %d Test(s) failed of %d Tests\n\n", failed, count)
              } else {
                printf(":raised_hands: %d Tests pass\n\n", count)
              }
              details = details"\n</details>\n\n"
              print(details)
            }' >> $GITHUB_STEP_SUMMARY
          go tool cover -func coverage.out | awk -v baseUrl="$(git remote get-url origin)" '
            function bar(cov) {
              if (cov >= 95) {
                  return ":green_square::green_square::green_square::green_square:"
                } else if (cov >= 75) {
                  return ":green_square::green_square::green_square::red_square:"
                } else if (cov >= 50) {
                  return ":green_square::green_square::red_square::red_square:"
                } else if (cov >= 25) {
                  return ":green_square::red_square::red_square::red_square:"
                } else {
                  return ":red_square::red_square::red_square::red_square:"
                }
            }
            BEGIN {
              printf("## Coverage\n\n")
              details = "<details>\n<summary>Coverage Details</summary>\n\n"
            }
            $1 !~ /total:/ {
              if (match($3,/^([0-9.]+)%$/,c) && match($1,/^[^/]+(.+):$/,f)) {
                cov = c[1]+0
                file = f[1]
                details = sprintf("%s%s %6s %-40s [%s](%s)\n", details, bar(cov), $3, $2, file)
              }
              total = $NF
            }
            END {
              cov = 0
              if (match(total,/^([0-9.]+)%$/,c)) {
                cov += c[1]
              }
              printf("Total coverage: %s %s\n", bar(cov), total)
              details = details"\n</details>\n\n"
              print(details)
            }' >> $GITHUB_STEP_SUMMARY
      - name: Archive code coverage results
        if: ${{ success() }}
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: coverage.html
          retention-days: 5
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: stable

      - name: Install xvfb, upx and gtk
        run: sudo apt-get update && sudo apt-get install upx-ucl libgtk-4-dev  libglib2.0-dev xvfb -y

      - name: Build
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: latest
          args: build --snapshot --clean --timeout 60m
# yaml-language-server: $schema=https://raw.githubusercontent.com/SchemaStore/schemastore/master/src/schemas/json/github-workflow.json
